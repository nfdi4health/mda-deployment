apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-backend
spec:
  serviceName: {{ .Release.Name }}-mda-backend
  selector:
    matchLabels:
      name: {{ .Release.Name }}-backend
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}-backend
    spec:
      containers:
      - image: {{ .Values.images.backend }}
        name: backend
        resources:
          limits:
            memory: 1000Mi
          requests:
            memory: 100Mi
        env:
          - name: PYTHONPATH
            value: "/workspace"
          - name: API_SEMLOOKP
            value: https://semanticlookup.zbmed.de/ols/api/
          - name: INSTRUMENTS
            value: "/instruments"
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                name: mda.{{ .Release.Name }}--postgres-cluster.credentials.postgresql.acid.zalan.do
                key: username
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mda.{{ .Release.Name }}--postgres-cluster.credentials.postgresql.acid.zalan.do
                key: password
          - name: DB_HOST
            value: {{ .Release.Name }}--postgres-cluster
          - name: API_PREDICT
            value: http://{{ .Release.Name }}-prediction:5000
        ports:
          - containerPort: 5000
        volumeMounts:
          - mountPath: "/instruments"
            name: "data-container"
      volumes:
        - name: "data-container"
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mda-backend-file-data-container
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-backend
spec:
  ports:
    - name: "5000"
      port: 5000
      targetPort: 5000
  selector:
    name: {{ .Release.Name }}-backend
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-mda-backend-file-data-container
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
